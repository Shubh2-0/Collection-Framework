
public class Collection_Hierarchy {

/*
 
  WHAT IS HIERARCHY ?
  ALL THE MEMBERS OF THE FAMILY (PURA KHAANDHAAN)
  
  COLECTION KE DO BADE-BADE PARIWAR
  
  1.COLLECTION    2.MAP 
  
   COLLECTION IS A TYPE INTERFACE AND ITS REPRESENT THE GROUP OF OBJECTS 
   IN A SINGLE ENTITY(SINGLE UNIT) AND THEY CALL THIER CHILD TO DO THIS TASK
   BECUASE COLLECTION IS A INTERFACE AND WE CAN NOT CREATE THE OBJECTS 
   BY USING INTERFACE.
   
   COLLECTION HAVE TWO CHILD : -  1.LIST  2.SET 
   
               <---------LIST--------->
   
   LIST AND SET IS ALSO INTERFACE SO CAN NOT CREATE OBJECTS OF
   LIST AND SET SO HERE WE HAVE TO USE THIER CHILD (WHICH IS CLASS)
   
   BEHAVIOUR OF LIST :-
   BASICALLY LIST CREATE THE INDEX COLLECTION (INDEX BASING COLLECTION) LIKE ARRAY
   ORDER IS PRESERVED -> JISS ORDER M ELEMENT DALONGE USSI ORDER M MILENGA 
   IN SIMPLE LIST MAINTAN THE ORDER OF INSERTION
   DUPLICATES ARE ALLOWED IN THE LIST.
   
   BEHAVIOUR OF SET :-
   NOT INDEX COLLECTION
   ORDER OF INSERTION IS NOT PREVERSED 
   DUPLICATES ARE NOT ALLOWED
   
   
   
   CHILD (CHILD) OF LIST :-
   
   ARRAYLIST -> DYNAMIC ARRAY (NORMAL ARRAY BUT SIZE IS CHANGING ACCORDING TO 
                THE DATA THAT WE INSERTED IN ARRAYLIST). LESS EFFICIENT AS COMPARE TO LINKEDLIST
                NON-THREAD SAFE CLASS
   
   
  
   LINKEDLIST -> LINKEDLIST IS BASICALLY WORK ON DOUBLY LINKEDLIST
   
   
                  
   VECTOR -> DYNAMIC ARRAY 
   
   
   
  VECTOR AND ARRAYLIST IS WORKING ON SAME CONCEPT SO HOW IT'S DIFFERENT FROM EACH OTHER ?
  
  JAVA START FROM 1.0 VERSION 
  AND COLLECTION IS ADDED IN JAVA ON JAVA VERSION 1.2
  BUT VECTOR IS FROM 1.0 VERSION (OLD CLASS)(LEGASI CLASS)
  BECUASE VECTOR IS OLD THAN COLLECTION SO THEY HAVE 
  THIER OWN EXTRA FEATURES ALSO (ADDITIONAL FEATURES)
  VECTOR IS THREAD SAFE CLASS
  
  
  VECTOR HAVE ONE MORE CHILD THAT IS STACK 
  STACK :- LIFO (LAST IN FIRST OUT)
  
  
                     <---------SET--------->
                     
                     
  SET HAVE TWO CHILD :- 1.HASHSET  2.SORTEDSET 
  
                  HASGSET HAVE ONE CHILD :- LINKEDHASHSET
   
   
   HASHSET IS IMPLEMENTATION CLASS OF SET (NOT INTERFACE)
   LINKEDHASHSET :- PROVIDE SOME EXTRA FEATURE 
                    ORDER OF INSERTION IS PRESERVED
                    
                    
   SORTEDSET IS A INTERFACE AND THEY HAVE ONE IMPLEMENTING CLASS CALLED : - TREESET  
    
    
    TREESET :- ALREADY PROVIDE SORTED IN THE ACENDING ORDER FORMAT IF THE OBJECT HAVE STRINGS AND NUMBERS
               WE CAN ALSO CREATE CUSTOM SORTING IN TREESET
               
               
     
     
     NOW HOW CAN WE ACCESS AND USE OF THE ELEMENTS OF OBJECT THAT ARE USING COLLECTION FRAMEWORK
     
     -----------------> ITERABLE (FATHER OF ALL THE COLLECTIONS)  
     
       ITERABLE - > FIRST METHOD : FOR EACH LOOP IS USE TO TRAVERSE
       
       ITERATOR - > SECOND MATHOD : ITERATOR(INTERFACE) (HAS A RELATIONSHIP)
                    COLLECTION HAVE ALREADY OBJECT OF ITERATOR
                    BUT WE CAN TRAVERSE ONLY FORWARD DIRECTION 
                    MEANS LEFT TO RIGHT ONLY ITERATOR HAVE THIER CHILD 
                    CALLED LISTITERATOR(INTERFACE)
                                        
       LISTITERATOR - > FORWARD AND BACKWARD DIRECTION BOTH
                       
                       FORWARD (FROM PARENT THAT IS ITERATOR)
                       BACKWARD (HAVE THIER OWN)
                       RIGHT TO LEFT (POSSIBLE)
                       LEFT TO RIGHT (POSSIBLE)
                       
                       
       ONLY LIST HAVE OBJECT OF LISTITERATOR (SET DOES NOT HAVE)     
       
       SET AND THIER CHILD USE ONLY ITERATOR AND ITERABLE OBJECT ONLY
       
       
       METHOD OF TRAVERCING :-
       
       
       LIST : 1.ITERABLE(FOR EACH LOOP)
              2.ITERATOR
              3.LISTITERATOR
              
                
        SET : 1.ITERABLE(FOR EACH LOOP)
              2.ITERATOR
               
               
               
        
        VECTOR HAVE THIER EXTRA TRAVERCE METHOD : ENUMERATION(INTERFACE) OBJECT AVAILABLE ON VECTOR ONLY
        
                                 
                    
        VECTOR :  1.ITERABLE(FOR EACH LOOP)
                  2.ITERATOR
                  3.LISTITERATOR   
                  4.ENUMERATION
        
           BECUASE STACK IS A CHILD OF VECTOR THAY HAVE ENUMERATION ALSO
           
           
        IN JAVA VERSION 1.8 WE HAVE ALSO A METHOD TO TRAVERSE 
        
         -----> FOREACH() METHOD
        
        
           
        
  SO NOW Collection Hierarchy IS COMPLETED
  
        
  NOW LET'S TAKE A LOOK OF MAP Hierarchy      
  
  
  MAP IS BASICALLY PROVIDE KEY VALUE FUNCTIONALITY
  
  KEY : VALUE (PAIR)
  
  FOR EXAMPLE :-
  
  KEY      VALUE
  RAM   : 1243223
  SHYAM : 1E2343
  ARJUN : 2WE3E3ER             
               
  HERE KEY AND VALUE CONTAIN ANY OBJECT LIKE 
  INTEGER , STRING , FLOAT , DOUBLE , 
  USER DEFINED CLASS(LIKE STUDENT , MOTORBOAT , COMPUTER ETC) 
  AND SO ON 
  KEY IS SET HERE ASSUME THAT NATURAL ORDERING OF 
  KEYS ARE NOT PRESERVED UNIQUES KEY ALLOWED ONLY (DUPLICATE KEYS NOT ALLOWED)
  
  MAP IS INTERFACE SO THIER CHILD THAT IS HASHMAP TREEMAP AND LINKEDHASHMAP ARE PROVIDE 
  THIER IMPLEMENTATION THIS ALL ARE THE CLASS WHICH IMPLEMENTS MAP INTERFACE
   
    
 
  MAP HAVE TWO ->  1. HASHMAP (CLASS)
                   2.SORTEDMAP(INTERFACE)       
        
        
  IN SORTEDMAP WE HAVE A CLASS CALLED TREEMAP WHICH SORT THE 
  OBJECTS OF MAP ACCORDING TO KEYS AND ALSO WE CAN PROVIDE CUSTOME SORTING        
        
  IN HASHMAP THE ORDER OF INSERTION IS NOT PRESERVED  (WE CAN'T PROVIDE SORTING ALO IN HASHMAP)     
  IN LINKEDHASHMAP THE ORDER OF INSERTION IS PRESERVED             
               
               
               
               
               
                  
   
                                  
 
 
 */
	
	
	
	
}
